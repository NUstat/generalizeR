library(generalizeR)
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
devtools::install_github("NUstat/generalizeR", force = TRUE)
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE)
weighting_output1 <- weighting(data = target_pop,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
treatment_indicator = "in_treat", # Variable that indicates whether an observation in the sample receives the treatment (1 = treatment group, 0 = control group). Observations not in the sample must have a value of NA for this variable.
outcome = "m.m1gain",
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE) # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
rm(list = "assess")
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
assess_output$cov_dist_plots
source("~/STEPP Center/generalizeR/R/utils.R")
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_plots <- list()
for (covariate in covariates) {
new_plot <- expanded.data %>%
ggplot() +
geom_density(aes(x = !!rlang::sym(covariate), fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle(paste(covariate, "Density Plot")) +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_plots[[covariate]] <- new_plot
}
cov_dist_plots
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_plots <- list()
for (covariate in covariates) {
new_plot <- expanded.data %>%
ggplot() +
geom_density(aes(x = !!rlang::sym(covariate), fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle(paste(covariate, "Density Plot")) +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_plots[[covariate]] <- new_plot
}
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = 1),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot
print(assess_output)
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
rm(list = "assess")
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
rm(list = "assess()")
?assess
generalizeR:::print.generalizeR_assess()
generalizeR:::print.generalizeR_assess
generalizeR:::print.generalizeR_assess(assess_output)
generalizeR:::print.generalizeR_assess(target_pop)
assess_output$estimation_method
summary(assess_output)
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
summary(assess_output)
switch("rf",
"lr" = "Logistic Regression",
"rf" = "Random Forest",
"lasso" = "Lasso")
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
?crayon
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
rm(list = "assess")
library(generalizeR)
# Read in outcome dataset that is only available to schools in the experiment
outcome <- read.csv("Simcalc_outs.csv")
# Population dataset has both schools in the experiment and schools not in the experiment (taken from CCD)
target_pop <- read.csv("data_simcalc_D.csv") %>% # Read in population data
filter(PILOT != 1) %>% # Delete observations that were in pilot study so TATE is not biased
mutate(
in_study = EXPT, # Rename sample inclusion indicator variable
# Rename treatment receipt indicator variable and change values not in study to NA
in_treat = ifelse(in_study == 1,
ifelse(TRT == 1, 1, 0),
NA)) %>%
left_join(outcome, # Add outcome variables to population dataset
by = "CAMPUS") %>%
filter(!duplicated(CAMPUS)) %>% # Remove any repeated observations
select(in_study, in_treat, m.m1gain, m.m2gain, all_of(covariates)) # Keep only sample indicator, treatment indicator, outcomes, and desired covariates
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
print(assess_output)
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
devtools::install_github("NUstat/generalizeR")
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
detach("package:generalizeR", unload = TRUE)
rm(list = "assess")
devtools::install_github("NUstat/generalizeR")
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
rm(list="assess")
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
rm(list="assess")
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
source("~/STEPP Center/generalizeR/R/utils.R", echo=TRUE)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
rm(list = "assess")
rm(list = ls())
library(generalizeR)
library(rlang)
library(tidyverse)
covariates <- c("CPSTTENA", "CPSTEXPA", "CPSTKIDR", "CPSTBLFP", "CPSTHIFP", "CPSTTOFC", "CPST00FP", "CPST01FP", "CPST20FP", "CPETDISP", "CPERRA7R", "CPEMALLP", "CPETG07P", "CPETG07C", "CPETBLAP", "CPETHISP", "CPETLEPP", "CPETECOP", "CPETRSKP", "CA007TR07R", "CA007TM07R", "CA311TM07R", "CA311TA07R", "CA311CM07R", "CA311CA07R", "RURAL")
# Read in outcome dataset that is only available to schools in the experiment
outcome <- read.csv("Simcalc_outs.csv")
# Population dataset has both schools in the experiment and schools not in the experiment (taken from CCD)
target_pop <- read.csv("data_simcalc_D.csv") %>% # Read in population data
filter(PILOT != 1) %>% # Delete observations that were in pilot study so TATE is not biased
mutate(
in_study = EXPT, # Rename sample inclusion indicator variable
# Rename treatment receipt indicator variable and change values not in study to NA
in_treat = ifelse(in_study == 1,
ifelse(TRT == 1, 1, 0),
NA)) %>%
left_join(outcome, # Add outcome variables to population dataset
by = "CAMPUS") %>%
filter(!duplicated(CAMPUS)) %>% # Remove any repeated observations
select(in_study, in_treat, m.m1gain, m.m2gain, all_of(covariates)) # Keep only sample indicator, treatment indicator, outcomes, and desired covariates
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
print(assess_output)
print(assess_output)
source("~/STEPP Center/generalizeR/R/assess.R", echo=TRUE)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
print(assess_output)
rm(list = "assess")
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
summary(assess_output)
print(assess_output)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
library(generalizeR)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
rm(list = "assess")
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
print(assess_output)
assess_output
