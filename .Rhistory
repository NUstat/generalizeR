test = .make.recruitment.table(strat_output, 20)
test$recruit_table
test
test[[2]]
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
test = recruit(strat_output)
test
test$recruitment_lists
source("~/generalizeR/R/recruit.R", echo=TRUE)
source("~/generalizeR/R/utils.R", echo=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
strat_output$pop_data_by_stratum
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
test = recruit(strat_output)
test
recruit(strat_output, guided = FALSE, sample_size = 40)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, sample_size = 40)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, sample_size = 40)
recruit(strat_output, guided = FALSE, sample_size = 40, save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, sample_size = 40, save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, sample_size = 40, save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, sample_size = 40, save_as_csv = TRUE)
test$recruitment_kable
test
strat_output
strat_output
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
recruit(strat_output, guided = FALSE, sample_size = 40, save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, sample_size = 40, save_as_csv = TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output)
recruit(strat_output, guided = FALSE, sample_size = 40, save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, sample_size = 40, save_as_csv = TRUE)
recruit(strat_output)
recruit(strat_output, guided = FALSE, save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, save_as_csv = TRUE)
recruit(strat_output, guided = FALSE, sample_size = 0, save_as_csv = TRUE)
recruit(strat_output, guided = FALSE, sample_size = a, save_as_csv = TRUE)
recruit(strat_output, guided = FALSE, sample_size = "a", save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, sample_size = "a", save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, sample_size = "a", save_as_csv = TRUE)
?stopifnot
?assertthat
install.packages("assertthat")
?assertthat
install.packages("assertthat")
?assertthat
library(assertthat)
?assert_that
x<-NULL
x
not_empty(x)
a<-1
not_empty(a)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, save_as_csv = TRUE)
source("~/generalizeR/R/stratify.R", echo=TRUE)
# Note:
#  changing back to this (below)
#   rmarkdown::html_vignette
# would probably make the vignette smaller.
knitr::opts_chunk$set(echo = TRUE)
library(crayon)
# install.packages('devtools')
library(devtools)
library(tidyverse)
# install_github("katiecoburn/generalizeRdata")
# install_github("NUstat/generalizeR")
library(generalizeRdata)
library(generalizeR)
library(ggthemes)
# install_github("eliocamp/ggnewscale")
library(ggnewscale)
library(gridExtra)
library(ggrepel)
# install.packages("usmap")
library(usmap)
# install.packages("kableExtra")
library(kableExtra)
# install.packages("viridis")
library(viridis)
# install.packages("patchwork")
library(patchwork)
library(lazyeval)
inference_pop <- cc %>%
filter(st == "TX") %>%
filter(charter == 1) %>%
filter(g_10_offered == "Yes")
inference_pop
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
source("~/generalizeR/R/utils.R", echo=TRUE)
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
source("~/generalizeR/R/libraries.R", echo=TRUE)
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
?daisy
source("~/generalizeR/R/stratify.R", echo=TRUE)
recruit(strat_output, guided = FALSE, save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, save_as_csv = TRUE)
is_odd <- function(x) {
assert_that(is.numeric(x), length(x) == 1)
x%%2 == 1
}
see_if(is_odd(2))
on_failure(is_odd) <- function(call, env) {
paste0(deparse(call$x), " is even")
}
see_if(is_odd(2))
is_odd <- function(x) {
assert_that(is.numeric(x), length(x) == 1)
x%%2 == 1
}
see_if(is_odd(2))
on_failure(is_odd) <- function(call, env) {
paste0(deparse(call$x), " is even")
}
see_if(is_odd(2))
on_failure(is_odd) <- function(call, env) {
paste0(deparse(call$x), " is even")
}
see_if(is_odd(2))
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, save_as_csv = TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
recruit(strat_output, guided = FALSE, save_as_csv = TRUE)
is_empty <- function(x) {
assertthat::assert_that(not_empty(x))
}
on_failure(is_empty) <- function(call, env) {
"You must specify the number of units that you wish to recruit when running the unguided version of this function."
}
is_empty()
x<-NULL
x
noNA(x)
noNA(a)
noNA(b)
x<-NA
noNA(x)
?is_empty
is_empty(NULL)
is_empty(list())
is_empty(list(NULL))
?not_empty
not_empty(x)
x
not_empty(numeric())
not_empty(mtcars[0, ])
not_empty(mtcars[, 0])
on_failure(is_empty) <- function(call, env) {
"You must specify the number of units that you wish to recruit when running the unguided version of this function."
}
mtcars[, 0]
mtcars[0, 0]
source("~/generalizeR/R/recruit.R", echo=TRUE)
rec_output <- recruit(strat_output, guided = FALSE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
rec_output <- recruit(strat_output, guided = FALSE)
x<-NULL
not_empty(x)
source("~/generalizeR/R/recruit.R", echo=TRUE)
not_empty(x)
rec_output <- recruit(strat_output, guided = FALSE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
rec_output <- recruit(strat_output, guided = FALSE)
rm(list = ls())
strat_output
inference_pop <- cc %>%
filter(st == "TX") %>%
filter(charter == 1) %>%
filter(g_10_offered == "Yes")
inference_pop
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
rec_output <- recruit(strat_output, guided = FALSE)
# Note:
#  changing back to this (below)
#   rmarkdown::html_vignette
# would probably make the vignette smaller.
knitr::opts_chunk$set(echo = TRUE)
library(crayon)
# install.packages('devtools')
library(devtools)
library(tidyverse)
# install_github("katiecoburn/generalizeRdata")
# install_github("NUstat/generalizeR")
library(generalizeRdata)
library(generalizeR)
library(ggthemes)
# install_github("eliocamp/ggnewscale")
library(ggnewscale)
library(gridExtra)
library(ggrepel)
# install.packages("usmap")
library(usmap)
# install.packages("kableExtra")
library(kableExtra)
# install.packages("viridis")
library(viridis)
# install.packages("patchwork")
library(patchwork)
library(lazyeval)
inference_pop <- cc %>%
filter(st == "TX") %>%
filter(charter == 1) %>%
filter(g_10_offered == "Yes")
inference_pop
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
# Note:
#  changing back to this (below)
#   rmarkdown::html_vignette
# would probably make the vignette smaller.
knitr::opts_chunk$set(echo = TRUE)
library(crayon)
# install.packages('devtools')
library(devtools)
library(tidyverse)
# install_github("katiecoburn/generalizeRdata")
# install_github("NUstat/generalizeR")
library(generalizeRdata)
library(generalizeR)
library(ggthemes)
# install_github("eliocamp/ggnewscale")
library(ggnewscale)
library(gridExtra)
library(ggrepel)
# install.packages("usmap")
library(usmap)
# install.packages("kableExtra")
library(kableExtra)
# install.packages("viridis")
library(viridis)
# install.packages("patchwork")
library(patchwork)
library(lazyeval)
inference_pop <- cc %>%
filter(st == "TX") %>%
filter(charter == 1) %>%
filter(g_10_offered == "Yes")
inference_pop
source("~/generalizeR/R/stratify.R", echo=TRUE)
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
source("~/generalizeR/R/stratify.R", echo=TRUE)
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
?Kmeans_rcpp
source("~/generalizeR/R/stratify.R", echo=TRUE)
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
install.packages("clusterR")
source("~/generalizeR/R/stratify.R", echo=TRUE)
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
source("~/generalizeR/R/recruit.R", echo=TRUE)
rec_output <- recruit(strat_output, guided = FALSE)
?on_failure
source("~/generalizeR/R/recruit.R", echo=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
library(assertthat)
source("~/generalizeR/R/recruit.R", echo=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
detach("package:assertthat", unload=TRUE)
source("~/generalizeR/R/recruit.R", echo=TRUE)
unloadNamespace("assertthat")
?dbplyr
x = tibble(1)
x = dplyr::tibble(1)
class(x)
inherits(x, "data.frame")
is.data.frame(x)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(ipeds)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
library(magrittr)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
x = nULL
x
x = NULL
x
class(x)
is.null(x)
assertthat::assert_that(is.null(x))
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
?not_empty
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
library(assertthat)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
library(assertthat)
stratify()
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify()
?repeat
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(ipeds, guided = FALSE)
library(generalizeR)
stratify(ipeds, guided = FALSE)
library(generalizeRdata)
stratify(ipeds, guided = FALSE)
?across
?is_character
?as_factor
?forcats
?all_of
?summarise_all
?arrange
?everything
?unique
?group_by
?left_join
?unite
?select
?count
?add_row
?tibble_row
?contains
?pivot_longer
?case_when
?colnames
?append
?kbl
?kable_styling
?round
?is.empty
?is_empty
?menu
?`colnames<-`
?rownames_to_column
?if_any
?is.na
?drop_na
?is.factor
?plasma
?fct_reorder
?summarise
?negate
?viridis
?suppressWarnings
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(ipeds, guided = FALSE)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(ipeds, guided = FALSE)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(ipeds, guided = FALSE)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(ipeds, guided = FALSE)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(ipeds, guided = FALSE, n_strata = 4)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
# Note:
#  changing back to this (below)
#   rmarkdown::html_vignette
# would probably make the vignette smaller.
knitr::opts_chunk$set(echo = TRUE)
library(crayon)
# install.packages('devtools')
library(devtools)
library(tidyverse)
# install_github("katiecoburn/generalizeRdata")
# install_github("NUstat/generalizeR")
library(generalizeRdata)
library(generalizeR)
library(ggthemes)
# install_github("eliocamp/ggnewscale")
library(ggnewscale)
library(gridExtra)
library(ggrepel)
# install.packages("usmap")
library(usmap)
# install.packages("kableExtra")
library(kableExtra)
# install.packages("viridis")
library(viridis)
# install.packages("patchwork")
library(patchwork)
library(lazyeval)
inference_pop <- cc %>%
filter(st == "TX") %>%
filter(charter == 1) %>%
filter(g_10_offered == "Yes")
stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"))
stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "a")
?is_empty
?setdiff
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total1", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total1", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch1")
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("state", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
inference_pop
stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("st", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
inference_pop$st
inference_pop$sch_name
stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("sch_name", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(inference_pop)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(inference_pop)
?purrr
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(inference_pop)
stratify(inference_pop)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(inference_pop)
stratify(inference_pop)
?scan
x= c(1,2, 3)
x
x[2.5]
x[4]
1:2 %in% x
all(1:2 %in% x)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
stratify(inference_pop)
stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
strat_output <- stratify(inference_pop, guided = FALSE, n_strata = 4, variables = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch"), idvar = "ncessch")
strat_output
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
source("~/STEPP Center/generalizeR/R/stratify.R", echo=TRUE)
