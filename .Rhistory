cov_dist_plots <- c()
for (covariate in selection_covariates) {
new_plot <- data %>%
ggplot() +
geom_density(aes(x = !!rlang::sym(covariate), fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(y = "Density",
title = paste("Distribution of", covariate)) +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title.x = element_blank(),
plot.title = element_text(size = 12))
new_plot %>% print()
}
data = target_data
covariate = selection_covariates[1]
sample_indicator = "trial"
cov_dist_plots <- c()
for (covariate in selection_covariates) {
new_plot <- data %>%
ggplot() +
geom_density(aes(x = !!rlang::sym(covariate), fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(y = "Density",
title = paste("Distribution of", covariate)) +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title.x = element_blank(),
plot.title = element_text(size = 12))
new_plot %>% print()
}
data = target_data
covariate = selection_covariates[1]
sample_indicator = "trial"
cov_dist_plots <- c()
for (covariate in selection_covariates) {
new_plot <- data %>%
ggplot() +
geom_density(aes(x = !!rlang::sym(covariate), fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(y = "Density",
title = paste("Distribution of", covariate)) +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title.x = element_blank(),
plot.title = element_text(size = 12))
cov_dist_plots <- c(cov_dist_plots, new_plot)
}
print(cov_dist_plots)
print(cov_dist_plots[1])
print(cov_dist_plots[2])
data = target_data
covariate = selection_covariates[1]
sample_indicator = "trial"
cov_dist_plots <- list()
for (covariate in selection_covariates) {
new_plot <- data %>%
ggplot() +
geom_density(aes(x = !!rlang::sym(covariate), fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(y = "Density",
title = paste("Distribution of", covariate)) +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title.x = element_blank(),
plot.title = element_text(size = 12))
cov_dist_plots <- list(cov_dist_plots, new_plot)
}
cov_dist_plots
data = target_data
covariate = selection_covariates[1]
sample_indicator = "trial"
cov_dist_plots <- list()
for (covariate in selection_covariates) {
new_plot <- data %>%
ggplot() +
geom_density(aes(x = !!rlang::sym(covariate), fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(y = "Density",
title = paste("Distribution of", covariate)) +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title.x = element_blank(),
plot.title = element_text(size = 12))
cov_dist_plots[[covariate]] <- new_plot
}
cov_dist_plots
a<-1:24
a[1:25]
a[1:25] %>% na.omit()
a[1:25] %>% drop_na()
a[1:25] %>% dplyr::drop_na()
a[1:25] %>% tidyr::drop_na()
a[1:25] %>% na.omit()
?na.omit
source("~/STEPP Center/generalizeR/R/utils.R", echo=TRUE)
.make.covariate.table(target_data, "trial", selection_covariates)
source("~/STEPP Center/generalizeR/R/utils.R", echo=TRUE)
.make.covariate.table(target_data, "trial", selection_covariates)
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
devtools::install_github("NUstat/generalizeR")
?facet_wrap
devtools::install_github("NUstat/generalizeR")
devtools::install_github("NUstat/generalizeR")
devtools::install_github("NUstat/generalizeR")
devtools::install_github("NUstat/generalizeR")
?scale_x_continuous
devtools::install_github("NUstat/generalizeR")
#
devtools::install_github("NUstat/generalizeR")
?element_text
devtools::install_github("NUstat/generalizeR")
# Store desired covariates in object
covariates <- c("CPSTTENA", "CPSTEXPA", "CPSTKIDR", "CPSTBLFP", "CPSTHIFP", "CPSTTOFC", "CPST00FP", "CPST01FP", "CPST20FP", "CPETDISP", "CPERRA7R", "CPEMALLP", "CPETG07P", "CPETG07C", "CPETBLAP", "CPETHISP", "CPETLEPP", "CPETECOP", "CPETRSKP", "CA007TR07R", "CA007TM07R", "CA311TM07R", "CA311TA07R", "CA311CM07R", "CA311CA07R", "RURAL")
# Read in outcome dataset that is only available to schools in the experiment
outcome <- read.csv("Simcalc_outs.csv")
# Population dataset has both schools in the experiment and schools not in the experiment (taken from CCD)
target_pop <- read.csv("data_simcalc_D.csv") %>% # Read in population data
filter(PILOT != 1) %>% # Delete observations that were in pilot study so TATE is not biased
mutate(
in_study = EXPT, # Rename sample inclusion indicator variable
in_treat = ifelse(in_study == 1,
ifelse(TRT == 1, 1, 0),
NA)) %>%  # Rename treatment receipt indicator variable and change missing values to zeroes
left_join(outcome, # Add outcome variables to population dataset
by = "CAMPUS") %>%
filter(!duplicated(CAMPUS)) %>%
select(in_study, in_treat, m.m1gain, m.m2gain, all_of(covariates)) # Keep only sample indicator, treatment indicator, outcomes, and desired covariates
library(tidyverse)
# Read in outcome dataset that is only available to schools in the experiment
outcome <- read.csv("Simcalc_outs.csv")
# Population dataset has both schools in the experiment and schools not in the experiment (taken from CCD)
target_pop <- read.csv("data_simcalc_D.csv") %>% # Read in population data
filter(PILOT != 1) %>% # Delete observations that were in pilot study so TATE is not biased
mutate(
in_study = EXPT, # Rename sample inclusion indicator variable
in_treat = ifelse(in_study == 1,
ifelse(TRT == 1, 1, 0),
NA)) %>%  # Rename treatment receipt indicator variable and change missing values to zeroes
left_join(outcome, # Add outcome variables to population dataset
by = "CAMPUS") %>%
filter(!duplicated(CAMPUS)) %>%
select(in_study, in_treat, m.m1gain, m.m2gain, all_of(covariates)) # Keep only sample indicator, treatment indicator, outcomes, and desired covariates
expanded.data = target_pop
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = -0.5),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45,
vjust = -0.5),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45,
vjust = -0.5),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot %>% print()
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = 0.5),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot %>% print()
?element_line
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = 1),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot %>% print()
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = -45,
hjust = 1),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot %>% print()
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot %>% print()
expanded.data = target_pop
sample_indicator = "in_study"
cov_dist_facet_plot <- expanded.data %>%
tidyr::pivot_longer(cols = covariates[1:40] %>%
tidyselect::all_of() %>%
na.omit(),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate,
scales = "free",
nrow = ifelse(length(covariates) > 25, 5, NULL)) +
geom_density(aes(x = value, fill = factor(!!rlang::sym(sample_indicator))),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0),
n.breaks = 3) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Density Plots") +
theme_minimal() +
theme(axis.ticks.x = element_line(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 45,
hjust = 1),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
cov_dist_facet_plot %>% print()
devtools::install_github("NUstat/generalizeR")
library(generalizeR)
library(rlang)
library(tidyverse)
covariates <- c("CPSTTENA", "CPSTEXPA", "CPSTKIDR", "CPSTBLFP", "CPSTHIFP", "CPSTTOFC", "CPST00FP", "CPST01FP", "CPST20FP", "CPETDISP", "CPERRA7R", "CPEMALLP", "CPETG07P", "CPETG07C", "CPETBLAP", "CPETHISP", "CPETLEPP", "CPETECOP", "CPETRSKP", "CA007TR07R", "CA007TM07R", "CA311TM07R", "CA311TA07R", "CA311CM07R", "CA311CA07R", "RURAL")
# Read in outcome dataset that is only available to schools in the experiment
outcome <- read.csv("Simcalc_outs.csv")
# Population dataset has both schools in the experiment and schools not in the experiment (taken from CCD)
target_pop <- read.csv("data_simcalc_D.csv") %>% # Read in population data
filter(PILOT != 1) %>% # Delete observations that were in pilot study so TATE is not biased
mutate(
in_study = EXPT, # Rename sample inclusion indicator variable
# Rename treatment receipt indicator variable and change values not in study to NA
in_treat = ifelse(in_study == 1,
ifelse(TRT == 1, 1, 0),
NA)) %>%
left_join(outcome, # Add outcome variables to population dataset
by = "CAMPUS") %>%
filter(!duplicated(CAMPUS)) %>% # Remove any repeated observations
select(in_study, in_treat, m.m1gain, m.m2gain, all_of(covariates)) # Keep only sample indicator, treatment indicator, outcomes, and desired covariates
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
detach("package:generalizeR", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
devtools::install_github("NUstat/generalizeR", force = TRUE)
library(generalizeR)
library(rlang)
library(tidyverse)
assess_output <- assess(data = target_pop,
guided = FALSE,
sample_indicator = "in_study", # Variable that indicates whether an observation is included in the sample (1 = in sample, 0 = out of sample)
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE, # Setting to FALSE means sample is treated as a subset of population. TRUE means sample and population are considered completely disjoint (no overlap)
trim_pop = FALSE) # Setting to TRUE means the population covariates will be trimmed (some observations will be removed) so as not to exceed the bounds of the sample covariates
.make.covariate.table(target_pop,
"in_study",
covariates)
covariates <- c("CPSTTENA", "CPSTEXPA", "CPSTKIDR", "CPSTBLFP", "CPSTHIFP", "CPSTTOFC", "CPST00FP", "CPST01FP", "CPST20FP", "CPETDISP", "CPERRA7R", "CPEMALLP", "CPETG07P", "CPETG07C", "CPETBLAP", "CPETHISP", "CPETLEPP", "CPETECOP", "CPETRSKP", "CA007TR07R", "CA007TM07R", "CA311TM07R", "CA311TA07R", "CA311CM07R", "CA311CA07R", "RURAL")
# Read in outcome dataset that is only available to schools in the experiment
outcome <- read.csv("Simcalc_outs.csv")
# Population dataset has both schools in the experiment and schools not in the experiment (taken from CCD)
target_pop <- read.csv("data_simcalc_D.csv") %>% # Read in population data
filter(PILOT != 1) %>% # Delete observations that were in pilot study so TATE is not biased
mutate(
in_study = EXPT, # Rename sample inclusion indicator variable
# Rename treatment receipt indicator variable and change values not in study to NA
in_treat = ifelse(in_study == 1,
ifelse(TRT == 1, 1, 0),
NA)) %>%
left_join(outcome, # Add outcome variables to population dataset
by = "CAMPUS") %>%
filter(!duplicated(CAMPUS)) %>% # Remove any repeated observations
select(in_study, in_treat, m.m1gain, m.m2gain, all_of(covariates)) # Keep only sample indicator, treatment indicator, outcomes, and desired covariates
covariates
.make.covariate.table(target_pop,
"in_study",
covariates)
target_pop
length(covariates)
rm(list = ls())
