filter(!duplicated(CAMPUS)) %>%
select(in_study, in_treat, m.m1gain, m.m2gain, all_of(covariates)) # Keep only sample indicator, treatment indicator, outcomes, and desired covariates
weighting_output1 <- weighting(data = target_pop,
sample_indicator = "in_study",
treatment_indicator = "in_treat",
outcome = "m.m1gain",
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE) # Setting to FALSE means sample is not wholly separate from population)
weighting_output1
source("~/STEPP Center/generalizeR/R/weighting.R", echo=TRUE)
weighting_output1 <- weighting(data = target_pop,
sample_indicator = "in_study",
treatment_indicator = "in_treat",
outcome = "m.m1gain",
covariates = covariates,
estimation_method = "lr", # Estimation method is for propensity scores. Method is currently set to logistic regression. Can also be random forest ("rf") or LASSO ("lasso")
disjoint_data = TRUE) # Setting to FALSE means sample is not wholly separate from population)
library(magrittr)
library(rlang)
library(ggplot2)
library(generalizeR)
library(generalizeRdata)
# Define inference population
inference_pop = cc %>%
dplyr::filter(st == "TX") %>%
dplyr::filter(charter == 1) %>%
dplyr::filter(g_10_offered == "Yes")
# Define selection covariates
selection_covariates = c("total", "pct_black_or_african_american", "pct_female", "pct_free_and_reduced_lunch")
# Set a seed
set.seed(8675)
# Create stratify object
stratify_output = stratify(inference_pop, guided = FALSE, n_strata = 4, variables = selection_covariates, idvar = "ncessch")
recruit_output = recruit(stratify_output, guided = FALSE, sample_size = 40, save_as_csv = FALSE)
# Define target population as raw recruitment data from stratify output
target_data = stratify_output$pop_data_by_stratum
# Store stratum sizes
stratum_sizes = target_data %>%
dplyr::group_by(Stratum) %>%
dplyr::count(Stratum)
# Define sample sizes to be selected from each stratum.
stratum_sample_sizes = recruit_output$recruitment_numbers
# Total sample size is the sum of the stratum sample sizes
total_sample_size = stratum_sample_sizes %>% sum()
# Randomly select units within each stratum to be part of the sample, according to the specified stratum sample sizes.
# Add selected units to a new dataframe.
sample_data = target_data %>%
dplyr::group_by(Stratum) %>%
tidyr::nest() %>%
dplyr::ungroup() %>%
dplyr::mutate(n = stratum_sample_sizes) %>%
dplyr::mutate(samp = purrr::map2(.x = data, .y = n,
.f = function(.x, .y) dplyr::slice_sample(.data = .x, n = .y))) %>%
dplyr::select(-data, -n) %>%
tidyr::unnest(samp)
# Randomly assign selected units within each stratum to treatment and add them to a new dataframe. Units that have not
# been assigned to treatment but have still been selected for trial will be assumed to be part of control.
treatment_data = sample_data %>%
dplyr::group_by(Stratum) %>%
tidyr::nest() %>%
dplyr::ungroup() %>%
dplyr::mutate(samp = purrr::map(.x = data,
.f = function(.x) dplyr::slice_sample(.data = .x, prop = 0.5))) %>%
dplyr::select(-data) %>%
tidyr::unnest(samp)
# Add columns to target data specifying whether each unit is part of the trial or not, and if they are, whether they have been assigned
# to treatment or control
target_data = target_data %>%
dplyr::mutate(trial = ifelse(ncessch %in% sample_data$ncessch, 1, 0),
treatment = dplyr::case_when(
ncessch %in% treatment_data$ncessch ~ 1,
ncessch %in% sample_data$ncessch ~ 0)
) %>%
dplyr::select(-Stratum, -ncessch)
data = outcome_data
data = target_data
covariates = selection_covariates
data %>%
select(covariates[1]) %>%
ggplot2::ggplot() +
geom_density()
data = target_data
covariates = selection_covariates
data %>%
dplyr::select(covariates[1]) %>%
ggplot2::ggplot() +
geom_density()
data %>%
dplyr::select(covariates[1])
data = target_data
covariates = selection_covariates
data %>%
dplyr::select(covariates[1]) %>%
ggplot2::ggplot(aes(x=covariates[1])) +
geom_density()
?geom_density
data = target_data
covariates = selection_covariates
data %>%
dplyr::select(covariates[1]) %>%
ggplot2::ggplot(aes(x=covariates[1])) +
geom_histogram()
data %>%
dplyr::select(covariates[1])
covariates
data %>%
dplyr::select(covariates[2]) %>%
ggplot2::ggplot(aes(x=covariates[2])) +
geom_histogram()
data %>%
dplyr::select(covariates[2]) %>%
ggplot2::ggplot(aes(x=covariates[2])) +
geom_histogram(stat = "count")
data %>%
dplyr::select(covariates[2]) %>%
ggplot2::ggplot(aes(x=covariates[2])) +
geom_desnity()
data %>%
dplyr::select(covariates[2]) %>%
ggplot2::ggplot(aes(x=covariates[2])) +
geom_density()
data %>%
dplyr::select(covariates[2])
data %>%
dplyr::select(covariates[2], trial) %>%
ggplot2::ggplot(aes(x=covariates[2], fill = trial)) +
geom_density()
data %>%
ggplot2::ggplot(aes(x= total, fill = trial)) +
geom_density()
data
data$trial %>% table()
data %>%
ggplot2::ggplot(aes(x = total, fill = trial)) +
geom_density()
data = target_data
covariates = selection_covariates
data %>%
ggplot2::ggplot(aes(x = total, fill = trial)) +
geom_density()
library(magrittr)
library(rlang)
library(ggplot2)
library(generalizeR)
library(generalizeRdata)
data = target_data
covariates = selection_covariates
data %>%
ggplot2::ggplot(aes(x = total, fill = trial)) +
geom_density(alpha = 0.4)
library(magrittr)
library(rlang)
library(ggplot2)
library(generalizeR)
library(generalizeRdata)
data = target_data
covariates = selection_covariates
data %>%
ggplot2::ggplot(aes(x = total, fill = factor(trial))) +
geom_density(alpha = 0.4)
data
?pivot_longer
data %>%
tidyr::pivot_longer(cols = selection_covariates,
names_to = "covariate")
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate")
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot2::ggplot() +
facet_wrap(~covariate) +
geom_density(aes(x = covariate, fill = trial))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot2::ggplot() +
facet_wrap(~covariate) +
geom_density(aes(x = value, fill = trial))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate")
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot2::ggplot() +
facet_wrap(~covariate) +
geom_density(aes(x = value, fill = factor(trial)))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate) +
geom_density(aes(x = value, fill = factor(trial)))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial)))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
theme_minimal()
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme_minimal()
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL) +
theme_minimal()
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
theme_minimal()
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
theme(axis.ticks = element_line()) +
theme_minimal()
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
theme_minimal() +
theme(axis.ticks = element_line())
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line())
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(x = "Value",
y = "",
title = "Covariate Distributions")
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line())
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(x = "Value",
y = "",
title = "Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line())
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(x = "",
y = "",
title = "Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line())
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(x = "",
y = "",
title = "Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.text = element_blan())
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(x = "",
y = "",
title = "Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.text = element_blank())
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(x = "",
y = "",
title = "Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title = element_blank())
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title = element_blank())
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 10))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 15))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial))) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial)),
alpha = 0.4) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial)),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
ggtitle("Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title = element_blank(),
plot.title = element_text(size = 12))
data %>%
tidyr::pivot_longer(cols = tidyselect::all_of(selection_covariates),
names_to = "covariate") %>%
ggplot() +
facet_wrap(~covariate, scales = "free") +
geom_density(aes(x = value, fill = factor(trial)),
alpha = 0.7) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_discrete(name = NULL,
labels = c("Sample", "Population")) +
labs(y = "Density",
title = "Covariate Distributions") +
theme_minimal() +
theme(axis.ticks = element_line(),
axis.line = element_line(),
axis.title.x = element_blank(),
plot.title = element_text(size = 12))
source("~/STEPP Center/generalizeR/R/utils.R", echo=TRUE)
.make.covariate.table(target_data,)
.make.covariate.table(target_data, "trial", selection_covariates)
source("~/STEPP Center/generalizeR/R/utils.R", echo=TRUE)
.make.covariate.table(target_data, "trial", selection_covariates)
.make.covariate.table(target_data, "trial", selection_covariates, disjoint_data = FALSE)
.make.covariate.table(target_data, "trial", selection_covariates)
.make.covariate.table(target_data, "trial", selection_covariates, disjoint_data = FALSE)
.make.covariate.table(target_data, "trial", selection_covariates)
detach("package:generalizeR", unload = TRUE)
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("NUstat/generalizeR")
devtools::install_github("NUstat/generalizeR")
detach("package:rlang", unload = TRUE)
devtools::install_github("NUstat/generalizeR")
rm(list = ls())
devtools::install_github("NUstat/generalizeR")
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
#the above is a test
invisible(lapply(paste0('package:', c("stringr","fBasics")), detach, character.only=TRUE,unload=TRUE))
