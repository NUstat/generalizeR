[{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://nustat.github.io/generalizeR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Kathleen M. Coburn  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. generalizeR Copyright (C) 2020 Kathleen M. Coburn This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"generalizeR Tutorial","text":"Welcome generalizeR! package designed guide education researchers : Selecting important features inference population Developing recruitment plan future evaluation Assessing generalizability completed evaluation Note possible use package either end sampling process: can start beginning use package obtain stratified sample, can start end previously obtained sample data assess generalizability.","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"step-1-stratify","dir":"Articles","previous_headings":"","what":"Step 1: Stratify","title":"generalizeR Tutorial","text":"stratify() function defaults ‘guided’ mode, meaning prints text throughout prompts user enter information question--answer format. intentional, part mimic nature http://thegeneralizer.org/ part intend R package accessible possible people limited R experience. Users running stratify() multiple times, familiar R, simply dislike guided feature can turn using argument ‘guided = FALSE’. , however, must sure specify values function arguments, otherwise obtained user input later. tutorial follow hypothetical example.","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"filtering-the-inference-population","dir":"Articles","previous_headings":"Step 1: Stratify","what":"Filtering the Inference Population","title":"generalizeR Tutorial","text":"Suppose team education researchers want test effect intervention SAT scores. somewhat limited resources, plan using sample size 40 schools. want estimate average effect intervention Texas charter high schools. Thus, inference population consists Texas charter high schools. Previous literature suggests gender, minority status, social class might affect gaps achievement, select stratifying variables – percentage female, percentage black, percentage free reduced lunch. also think school size might result treatment differences, include total school size well. Since working high schools, can use Common Core database provided ‘generalizeRdata’. information columns source data, run ?cc. looking st column, can already see problem . data frame contains schools states US, interested much narrower inference population. Therefore, filtering must first. identify Texas schools, can select rows st equal TX: filter non-charter schools, can use variable data frame called charter takes value 0 non-charter schools 1 charter schools. Finally, select high schools (almost always include grades 9 12), can use one grade indicator variables, say g_10_offered. combining filters, get: size inference population dropped 98,000 schools 350 schools. now includes Texas charter high schools (schools offer 10th grade).","code":"cc ## # A tibble: 98,563 × 43 ##        ncessch sch_n…¹ st    mstre…² mcity phone website lea_n…³ sch_t…⁴ g_pk_…⁵ ##          <dbl> <chr>   <chr> <chr>   <chr> <chr> <chr>   <chr>     <int> <chr>   ##  1 10000500870 Ala Av… AL    600 E … Albe… (256… http:/… Albert…       1 No      ##  2 10000500871 Albert… AL    402 E … Albe… (256… http:/… Albert…       1 No      ##  3 10000500879 Evans … AL    901 W … Albe… (256… http:/… Albert…       1 No      ##  4 10000500889 Albert… AL    1100 H… Albe… (256… http:/… Albert…       1 No      ##  5 10000501616 Big Sp… AL    257 Co… Albe… (256… http:/… Albert…       1 No      ##  6 10000502150 Albert… AL    1100 H… Albe… (256… http:/… Albert…       1 Yes     ##  7 10000600193 Kate D… AL    6077 M… Grant (256… http:/… Marsha…       1 No      ##  8 10000600872 Asbury… AL    1990 A… Albe… (256… http:/… Marsha…       1 No      ##  9 10000600876 Claysv… AL    140 Cl… Gunt… (256… http:/… Marsha…       1 Yes     ## 10 10000600877 Dougla… AL    P O Bo… Doug… (256… http:/… Marsha…       1 Yes     ## # … with 98,553 more rows, 33 more variables: g_kg_offered <chr>, ## #   g_1_offered <chr>, g_2_offered <chr>, g_3_offered <chr>, g_4_offered <chr>, ## #   g_5_offered <chr>, g_6_offered <chr>, g_7_offered <chr>, g_8_offered <chr>, ## #   g_9_offered <chr>, g_10_offered <chr>, g_11_offered <chr>, ## #   g_12_offered <chr>, level <chr>, leaid <int>, charter <dbl>, ## #   titlei_status_text <chr>, magnet_text <chr>, nslp_status <chr>, ## #   total <int>, pct_american_indian_or_alaska_native <dbl>, pct_asian <dbl>, … inference_pop <- cc %>%    filter(st == \"TX\") inference_pop <- cc %>%    filter(st == \"TX\") %>%    filter(charter == 1) %>%    filter(g_10_offered == \"Yes\") inference_pop ## # A tibble: 330 × 43 ##        ncessch sch_n…¹ st    mstre…² mcity phone website lea_n…³ sch_t…⁴ g_pk_…⁵ ##          <dbl> <chr>   <chr> <chr>   <chr> <chr> <chr>   <chr>     <int> <chr>   ##  1     4.80e11 POR VI… TX    1135 M… SAN … (210… \"http:… POR VI…       4 No      ##  2     4.80e11 CORPUS… TX    1135 M… SAN … (361… \"http:… POR VI…       4 No      ##  3     4.80e11 CESAR … TX    3701 M… CORP… (361… \"http:… POR VI…       4 No      ##  4     4.80e11 GEORGE… TX    6944 S… SAN … (210… \"\"      GEORGE…       4 Yes     ##  5     4.80e11 DALLAS… TX    4621 R… DALL… (214… \"http:… TEXANS…       4 No      ##  6     4.80e11 DALLAS… TX    325 W … DALL… (214… \"http:… TEXANS…       4 No      ##  7     4.80e11 HOUSTO… TX    325 W … DALL… (214… \"http:… TEXANS…       4 No      ##  8     4.80e11 SAN AN… TX    325 W … DALL… (210… \"http:… TEXANS…       4 No      ##  9     4.80e11 FORT W… TX    6220 W… FORT… (817… \"http:… TEXANS…       4 No      ## 10     4.80e11 FORT W… TX    325 W … DALL… (817… \"http:… TEXANS…       4 No      ## # … with 320 more rows, 33 more variables: g_kg_offered <chr>, ## #   g_1_offered <chr>, g_2_offered <chr>, g_3_offered <chr>, g_4_offered <chr>, ## #   g_5_offered <chr>, g_6_offered <chr>, g_7_offered <chr>, g_8_offered <chr>, ## #   g_9_offered <chr>, g_10_offered <chr>, g_11_offered <chr>, ## #   g_12_offered <chr>, level <chr>, leaid <int>, charter <dbl>, ## #   titlei_status_text <chr>, magnet_text <chr>, nslp_status <chr>, ## #   total <int>, pct_american_indian_or_alaska_native <dbl>, pct_asian <dbl>, …"},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"running-the-function","dir":"Articles","previous_headings":"Step 1: Stratify","what":"Running the Function","title":"generalizeR Tutorial","text":"now ready run stratify() inference population. enter: greeted following:  need make adjustments inference population forgotten store results – , use assignment operator <- assign results object (called output) – may enter 2 stop function . already taken care items, however, enter 1 proceed.","code":"output <- stratify(data = inference_pop)"},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"selecting-the-id-variable","dir":"Articles","previous_headings":"Step 1: Stratify","what":"Selecting the ID Variable","title":"generalizeR Tutorial","text":"next prompt requires us enter name ID variable wish use. enter name column contains unique NCES school IDs CCD database – ncessch.  receive message informing us stratify() converted character variables data frame factor variables. means factor variables large number levels original character versions many distinct observations. also told table displaying overview variables data frame printed Viewer pane. preview table shown . general, whenever table printed console, one printed Viewer pane well. Variable Overview","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"selecting-the-stratification-variables","dir":"Articles","previous_headings":"Step 1: Stratify","what":"Selecting the Stratification Variables","title":"generalizeR Tutorial","text":"Next receive prompt asking us select stratification variables menu showing us variables available dataset. also given warning must select least two variables can’t choose factor variable containing 4 levels. restrictions put place prevent errors ensure stratification process goes smoothly. wish use factor variable 4 levels stratification, must first exit stratify() re-code desired factor levels variable indicator variables within data frame (package fastDummies may use).  stratifying variables interest, chosen pct_female, pct_black_or_african_american, pct_free_and_reduced_lunch, total. enter: 29 32 38 42. function prints list variables names highlighted blue, well table displaying variable’s type number levels. done can look , confirm selected, make sure variables types expected. Since results seem reasonable, indicate correct entering 1.","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"missing-observations","dir":"Articles","previous_headings":"Step 1: Stratify","what":"Missing Observations","title":"generalizeR Tutorial","text":"now shown table (also available Viewer pane) breaks many missing observations variable contains, including id variable ncessch. observations dropped inference population stratification performed.","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"Step 1: Stratify","what":"Descriptive Statistics","title":"generalizeR Tutorial","text":"Next, function prints descriptive statistics stratification variables chosen, categorical continuous. case, variables continuous. Plots variables – histograms bar charts, appropriate – generated displayed one time.","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"choosing-the-number-of-strata","dir":"Articles","previous_headings":"Step 1: Stratify","what":"Choosing the Number of Strata","title":"generalizeR Tutorial","text":"Now ready choose number strata divide population. stratify() prints information, similar presented Generalizer Web application, explaining choice represents giving us guidance. choosing strata generally better, practical demand placed sampling process increases number strata, units must sampled stratum. Since planning using sample size 40 schools, ’ll try smaller number – 4 strata:  process stratifying can take time. function run silently, users might fear R frozen quit. sort progress bar, turned “verbose” mode clustering process, prints within-cluster sum squares iteration stratifying process converges:","code":""},{"path":[]},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"stratification-review","dir":"Articles","previous_headings":"Step 1: Stratify > Understanding the Results","what":"Stratification Review","title":"generalizeR Tutorial","text":"results begin brief review stratification process. informed stratification variables, observations dropped due missing data, population size (missing observations dropped), number strata, proportion variation population explained strata. case, proportion 66%. Increasing number strata increase percentage explained result homogeneous strata also require resources.","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"covariate-statistics","dir":"Articles","previous_headings":"Step 1: Stratify > Understanding the Results","what":"Covariate Statistics","title":"generalizeR Tutorial","text":"stratify() provides us table within-stratum means standard deviations stratifying variables, well count total number units stratum.  similar table printed Viewer pane: Covariate Statistics Stratum","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"heat-map","dir":"Articles","previous_headings":"Step 1: Stratify > Understanding the Results","what":"Heat Map","title":"generalizeR Tutorial","text":"function also prints heat map:  column heat map corresponds stratum. can read map going columns, assessing stratum relation population. Remember goal sample independently within stratum order obtain sample representative population whole. end, stratum made homogeneous possible within (.e. within-stratum variances minimized) also maintaining much heterogeneity possible across strata (.e. -stratum variance maximized). Looking first column, see Stratum 1 contains 161 Texas charter high schools. schools : close population mean number students (430), population mean percentage students free reduced lunch (80%), close population mean percentage female students (50%), population mean percentage black students (10%). columns may interpreted exactly manner. (Users may wonder shade red bottom left bottom right cells differs seem mean 10%. scale variable, size population mean, rounding.)","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"summary-and-print","dir":"Articles","previous_headings":"Step 1: Stratify > Understanding the Results","what":"Summary and Print","title":"generalizeR Tutorial","text":"wish look results stratify() , can run following code: Note output name assigned stratify_object example; users replace name chosen. also option print stratify_object. yields:  finished stratifying process!","code":"summary(strat_output)"},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"step-2-recruit","dir":"Articles","previous_headings":"","what":"Step 2: Recruit","title":"generalizeR Tutorial","text":"Now separated inference population 4 strata, next goal sample units stratum way overall sample representative entire population. can accomplish task using recruit() function. Like stratify(), recruit() guided default; can simply set guided = FALSE turn option choose, must specify values function arguments instead. Since assigned results stratify() object, object can passed directly recruit(), like : immediately greeted following message:  desired sample size 40 schools, enter ‘40’ number units wish recruit. function generates recruitment list stratum. also displays sample one recruitment lists immediately know look like. row stratum’s recruitment list corresponds different unit stratum, units ranked ascending order Mahalanobis distances mean vector stratifying variables. idea units smallest Mahalanobis distances likely “representative” population chosen first part sample.  Next, function prints recruitment table tells us many units recruit stratum. arrives numbers multiplying sampling proportion (equal ratio stratum size total population size) stratum desired sample size, case 40.  Recruitment Table means recruitment plan recruit 20 schools Stratum 1, 4 Stratum 2, 5 Stratum 3, 11 Stratum 4. function asks us want save recruitment lists csv files. Upon entering ‘1’ indicate ‘Yes’, folder selection widget appear allow us choose location computer save lists. Note occurs using guided version function; non-guided version, lists automatically saved working directory set save_as_csv = TRUE.  Lastly, function reminds us recruitment lists can also accessed output, provided stored object. finished recruitment process!","code":"rec_output <- recruit(strat_output)"},{"path":[]},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"assess","dir":"Articles","previous_headings":"Step 3: Assess","what":"assess()","title":"generalizeR Tutorial","text":"now ready take results obtained stratify() recruit() use assess() generalizability sample data population. generalizer index global measure similarity sample population defined set covariates (0 1). Can multiply 100: 0.8 -> 80% similar.","code":""},{"path":"https://nustat.github.io/generalizeR/articles/generalizeR_tutorial.html","id":"assess_wrap","dir":"Articles","previous_headings":"Step 3: Assess","what":"assess_wrap()","title":"generalizeR Tutorial","text":"taken four recruitment lists successfully recruited desired number units stratum: 20, 4, 5, 11 units strata 1, 2, 3, 4, respectively. completed study now interested whether results generalizable states US. Recall inference population consisted Texas charter high schools. Therefore, reasonable wonder whether sample can generalize charter high schools US. First must specify variables hope generalizable. variables first used stratify population. must read sample. multiple ways accomplish , important thing create data frame consisting units recruited population column containing sample IDs. example, build data frame four recruitment lists generated earlier. specify inference population – time data frame including states without charter high schools. data frame include unit IDs, variables interest, (applicable) grouping variable; since researcher wants generalize US states, grouping variable ‘st’ (state). Finally, feed sample populatiuon data frames, name ID variable, name grouping variable ‘assess_wrap()’ – wrapper included ‘assess()’ function ease use. can view table results across states. code extracts ‘st’ variable factor retains unique values, one row per state: information bound together generalizability indexes: However, information easier assess form map. many mapping tools R. First, use tidyverse turn generalizability index values categorical variable representing three levels generalizability. G-index 0.90 means sample equivalent randomized trial. G-index 0.50 0.90 means sample quite miniature population, statistical adjustments reweight sample may make generalization possible. Finally, G-index 0.50 means generalization (based upon selected covariates) completely unwarranted, statistical adjustment help. map tells researcher things. results equivalent randomized controlled trial generalizations charter high schools California Texas. Texas expected , since entire sample came Texas. California likely charter high school population similar Texas terms stratifying variables (pct_female, pct_black_or_african_american, pct_free_and_reduced_lunch, total number students). statistical adjustments, make generalizations populations charter high schools : Washington, Nevada, Utah, Arizona, Colorado, Kansas, Oklahoma, Minnesota, Indiana, Wisconsin, Michigan, Ohio, Pennsylvania, New York, Connecticut, North South Carolina, Georgia, Florida, Arkansas. Generalizations remaining states completely unwarranted; cases charter high schools state (labeled ‘NA’). researcher sample size 40, based careful, stratified sampling (adjustment), able generalize intervention results populations 22 US states.","code":"selection_vars <- c(\"pct_female\", \"pct_black_or_african_american\", \"pct_free_and_reduced_lunch\", \"total\") sample <- tibble(ncessch = c(recruit_output$recruitment_lists[[1]]$ncessch[1:20],                 recruit_output$recruitment_lists[[2]]$ncessch[1:4],                 recruit_output$recruitment_lists[[3]]$ncessch[1:5],                 recruit_output$recruitment_lists[[4]]$ncessch[1:11])) inference_pop <- cc %>%    filter(charter == 1) %>%   filter(g_10_offered == \"Yes\") %>%   select(ncessch, all_of(selection_vars), st)"},{"path":[]},{"path":"https://nustat.github.io/generalizeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tim Ruel. Author, maintainer. Benjamin Ackerman. Author. Katie Coburn. Author. Beatrice Chao. Author. Beth Tipton. Author.","code":""},{"path":"https://nustat.github.io/generalizeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ruel T, Ackerman B, Coburn K, Chao B, Tipton B (2022). generalizeR: Design Sample Recruitment Plan Assess Generalizability Broader Populations. https://nustat.github.io/generalizeR, https://github.com/NUstat/generalizeR.","code":"@Manual{,   title = {generalizeR: Design a Sample Recruitment Plan and Assess its Generalizability to Broader Populations},   author = {Tim Ruel and Benjamin Ackerman and Katie Coburn and Beatrice Chao and Beth Tipton},   year = {2022},   note = {https://nustat.github.io/generalizeR, https://github.com/NUstat/generalizeR}, }"},{"path":"https://nustat.github.io/generalizeR/index.html","id":"generalizer","dir":"","previous_headings":"","what":"Design a Sample Recruitment Plan and Assess its Generalizability to Broader Populations","title":"Design a Sample Recruitment Plan and Assess its Generalizability to Broader Populations","text":"goal generalizeR guide K-12 researchers process (1) designing sample recruitment plan generalization mind (2) reporting results study may (may ) generalize well.","code":""},{"path":"https://nustat.github.io/generalizeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Design a Sample Recruitment Plan and Assess its Generalizability to Broader Populations","text":"can install development version GitHub : package yet available CRAN.","code":"# install.packages(\"devtools\") devtools::install_github(\"NUstat/generalizeR\")"},{"path":"https://nustat.github.io/generalizeR/reference/assess.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess Generalizability of Randomized Trial to Population — assess","title":"Assess Generalizability of Randomized Trial to Population — assess","text":"function, given stacked data frame containing sample population data, assesses generalizability sample population given covariates.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/assess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess Generalizability of Randomized Trial to Population — assess","text":"","code":"assess(   trial,   selection_covariates,   data,   selection_method = \"lr\",   is_data_disjoint = TRUE,   trim_pop = FALSE,   seed = 12222 )"},{"path":"https://nustat.github.io/generalizeR/reference/assess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess Generalizability of Randomized Trial to Population — assess","text":"trial variable name denoting binary trial participation (1 = trial participant, 0 = trial participant) selection_covariates vector covariate names data set predict trial participation data data frame comprised \"stacked\" trial target population data selection_method method estimate probability trial participation.  Default logistic regression (\"lr\").  methods supported Random Forests (\"rf\") Lasso (\"lasso\") is_data_disjoint logical. TRUE, trial population data considered independent.  affects calculation weights - see details information. trim_pop logical. TRUE, population data subset exclude individuals covariates outside bounds trial covariates. seed numeric. default, seed set 12222, otherwise can specified (simulation purposes).","code":""},{"path":"https://nustat.github.io/generalizeR/reference/assess.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assess Generalizability of Randomized Trial to Population — assess","text":"'assess_wrap()' wrapper function allows assessment levels grouping variable.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/assess_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess the Generalizability of a Sample to a Population — assess_wrap","title":"Assess the Generalizability of a Sample to a Population — assess_wrap","text":"function wrapper function 'assess()' may make assessment user-friendly flexible.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/assess_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess the Generalizability of a Sample to a Population — assess_wrap","text":"","code":"assess_wrap(sample, population, join_var = NULL, grouping_var = NULL)"},{"path":"https://nustat.github.io/generalizeR/reference/assess_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess the Generalizability of a Sample to a Population — assess_wrap","text":"sample data frame column IDs population data frame column IDs, columns stratifying variables interest, (applicable) grouping variable join_var defaults NULL; name ID variable double quotes grouping_var defaults NULL; name grouping variable double quotes (required)","code":""},{"path":"https://nustat.github.io/generalizeR/reference/assess_wrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assess the Generalizability of a Sample to a Population — assess_wrap","text":"Given data frame tibble consisting column ID variable (sample) data frame tibble ID variable stratifying variables interest, function assess generalizability sample population. user can also specify grouping variable assess generalizability sample across population groups -- example, across US states. produce multiple generalizability index values, one per level grouping variable.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/covariate_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Covariate Balance Table — covariate_table","title":"Create Covariate Balance Table — covariate_table","text":"function designed use within 'assess().'","code":""},{"path":"https://nustat.github.io/generalizeR/reference/covariate_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Covariate Balance Table — covariate_table","text":"","code":"covariate_table(   trial,   selection_covariates,   data,   weighted_table = FALSE,   selection_method = \"lr\",   is_data_disjoint = TRUE )"},{"path":"https://nustat.github.io/generalizeR/reference/covariate_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Covariate Balance Table — covariate_table","text":"trial variable name denoting binary trial participation (1 = trial participant, 0 = trial participant) selection_covariates vector covariate names data set predict trial participation data data frame comprised \"stacked\" trial target population data weighted_table defaults FALSE; whether weights already included need estimated selection_method method estimate probability trial participation.  Default logistic regression (\"lr\").  methods supported Random Forests (\"rf\") Lasso (\"lasso\") is_data_disjoint defaults TRUE. TRUE, trial population data considered independent.  affects calculation weights","code":""},{"path":"https://nustat.github.io/generalizeR/reference/gen_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Generalizability Index — gen_index","title":"Calculate Generalizability Index — gen_index","text":"function easiest use 'assess()' can also used independently.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/gen_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Generalizability Index — gen_index","text":"","code":"gen_index(dat1B, dat2B)"},{"path":"https://nustat.github.io/generalizeR/reference/gen_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Generalizability Index — gen_index","text":"dat1B vector probabilities sample participation among individuals trial dat2B vector probabilities sample participation among individuals population","code":""},{"path":"https://nustat.github.io/generalizeR/reference/gen_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Generalizability Index — gen_index","text":"generalizability index, value 0 1, higher score indicates greater similarity","code":""},{"path":"https://nustat.github.io/generalizeR/reference/gen_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Generalizability Index — gen_index","text":"calculates generalizability index, value 0 1, represents generalizable given sample given population specified covariates. information calculation interpretation, please see Tipton (2014).","code":""},{"path":"https://nustat.github.io/generalizeR/reference/gen_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Generalizability Index — gen_index","text":"Tipton, E. (2014). generalizable experiment? index comparing experimental samples populations. Journal Educational Behavioral Statistics, 39(6), 478-501.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/generalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalize Average Treatment Effect from Randomized Trial to Population — generalize","title":"Generalize Average Treatment Effect from Randomized Trial to Population — generalize","text":"method used generalize average treatment effect target population.  Default \"weighting\" (weighting participation probability)","code":""},{"path":"https://nustat.github.io/generalizeR/reference/generalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalize Average Treatment Effect from Randomized Trial to Population — generalize","text":"","code":"generalize(   outcome,   treatment,   trial,   selection_covariates,   data,   selection_method = \"lr\",   is_data_disjoint = TRUE,   trim_pop = FALSE,   seed )"},{"path":"https://nustat.github.io/generalizeR/reference/generalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalize Average Treatment Effect from Randomized Trial to Population — generalize","text":"outcome variable name denoting outcome treatment variable name denoting binary treatment assignment (okay available trial, population) trial variable name denoting binary trial participation (1 = trial participant, 0 = trial participant) selection_covariates vector covariate names data set predict trial participation data data frame comprised \"stacked\" trial target population data selection_method method estimate probability trial participation.  Default logistic regression (\"lr\").  methods supported Random Forests (\"rf\") Lasso (\"lasso\") is_data_disjoint logical. TRUE, trial population data considered independent.  affects calculation weights - see details information. trim_pop logical. TRUE, population data subset exclude individuals covariates outside bounds trial covariates. seed numeric. default, seed set 13783, otherwise can specified (simulation purposes).","code":""},{"path":"https://nustat.github.io/generalizeR/reference/generalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalize Average Treatment Effect from Randomized Trial to Population — generalize","text":"generalize returns object class \"generalize\"","code":""},{"path":"https://nustat.github.io/generalizeR/reference/generalize_bart.html","id":null,"dir":"Reference","previous_headings":"","what":"BART for estimating TATE — generalize_bart","title":"BART for estimating TATE — generalize_bart","text":"BART estimating TATE","code":""},{"path":"https://nustat.github.io/generalizeR/reference/generalize_bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BART for estimating TATE — generalize_bart","text":"","code":"generalize_bart(   outcome,   treatment,   trial,   selection_covariates,   data,   is_data_disjoint = TRUE,   seed )"},{"path":"https://nustat.github.io/generalizeR/reference/generalize_bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BART for estimating TATE — generalize_bart","text":"outcome variable name denoting outcome treatment variable name denoting binary treatment assignment (ok available trial, population) trial variable name denoting binary trial participation (1 = trial participant, 0 = trial participant) selection_covariates vector covariate names data set predict trial participation data data frame comprised \"stacked\" trial target population data is_data_disjoint logical. TRUE, trial population data considered independent. seed numeric. default, seed set 13783, otherwise can specified (simulation purposes).","code":""},{"path":"https://nustat.github.io/generalizeR/reference/generalize_bart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BART for estimating TATE — generalize_bart","text":"generalize_bart returns list TATE estimate, standard error, 95\\","code":""},{"path":"https://nustat.github.io/generalizeR/reference/generalize_tmle.html","id":null,"dir":"Reference","previous_headings":"","what":"TMLE for estimating TATE — generalize_tmle","title":"TMLE for estimating TATE — generalize_tmle","text":"TMLE estimating TATE","code":""},{"path":"https://nustat.github.io/generalizeR/reference/generalize_tmle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TMLE for estimating TATE — generalize_tmle","text":"","code":"generalize_tmle(   outcome,   treatment,   trial,   selection_covariates,   data,   is_data_disjoint = TRUE,   seed )"},{"path":"https://nustat.github.io/generalizeR/reference/generalize_tmle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TMLE for estimating TATE — generalize_tmle","text":"outcome variable name denoting outcome treatment variable name denoting binary treatment assignment (ok available trial, population) trial variable name denoting binary trial participation (1 = trial participant, 0 = trial participant) selection_covariates vector covariate names data set predict trial participation data data frame comprised \"stacked\" trial target population data is_data_disjoint logical. TRUE, trial population data considered independent. seed numeric. default, seed set 13783, otherwise can specified (simulation purposes).","code":""},{"path":"https://nustat.github.io/generalizeR/reference/generalize_tmle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TMLE for estimating TATE — generalize_tmle","text":"generalize_tmle returns list TATE estimate, standard error, 95\\","code":""},{"path":"https://nustat.github.io/generalizeR/reference/recruit.html","id":null,"dir":"Reference","previous_headings":"","what":"Recruit Units from a Population for Sampling — recruit","title":"Recruit Units from a Population for Sampling — recruit","text":"function works output 'stratify()'. user provides number units wish sample population dataset. function tells user many sample stratum generates recruitment lists, one per stratum, can either saved .csv files given directory accessed later .","code":""},{"path":"https://nustat.github.io/generalizeR/reference/recruit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recruit Units from a Population for Sampling — recruit","text":"","code":"recruit(x, guided = TRUE, number = NULL, save_as_csv = FALSE)"},{"path":"https://nustat.github.io/generalizeR/reference/recruit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recruit Units from a Population for Sampling — recruit","text":"x output 'stratify()', S3 class 'generalizer_output' guided logical; defaults TRUE. Whether function guided (ask questions behave interactively throughout) . set FALSE, must provide values arguments number defaults NULL. guided set FALSE, must provide number units sample save_as_csv defaults NULL. guided set FALSE, specify whether save recruitment lists working directory; TRUE FALSE","code":""},{"path":"https://nustat.github.io/generalizeR/reference/recruit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recruit Units from a Population for Sampling — recruit","text":"one-element list containing table includes number units sample per stratum","code":""},{"path":"https://nustat.github.io/generalizeR/reference/recruit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recruit Units from a Population for Sampling — recruit","text":"function, others package, designed mimic website https://www.thegeneralizer.org/.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/stratify.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratify a Population Data Frame — stratify","title":"Stratify a Population Data Frame — stratify","text":"function takes input data frame want stratify clusters. Typically, goal stratification sampling generalizability. function, others package, designed mimic website https://www.thegeneralizer.org/.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/stratify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratify a Population Data Frame — stratify","text":"","code":"stratify(data, guided = TRUE, n_strata = NULL, variables = NULL, idnum = NULL)"},{"path":"https://nustat.github.io/generalizeR/reference/stratify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratify a Population Data Frame — stratify","text":"data R object containing population data frame guided logical; defaults TRUE. Whether function guided (ask questions behave interactively throughout) . set FALSE, must provide values arguments n_strata defaults NULL. guided set FALSE, must provide number strata cluster population variables defaults NULL. guided set FALSE, must provide character vector names stratifying variables (population data frame) idnum defaults NULL. guided set FALSE, must provide character vector name ID variable (population data frame)","code":""},{"path":"https://nustat.github.io/generalizeR/reference/stratify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratify a Population Data Frame — stratify","text":"function returns list class \"generalizer_output\" can provided input recruit(). information components list can found \"Details.\"","code":""},{"path":"https://nustat.github.io/generalizeR/reference/stratify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stratify a Population Data Frame — stratify","text":"list contains 11 components: x2, solution, n_strata, recruitment_lists, population_summary_stats2, summary_stats, summary_stats2, heat_data, heat_plot_final, idnum, variables. x2: tibble number rows equal number rows inference population (data) number columns equal number stratifying variables (dummy-coded applicable) plus ID column (idnum) column representing stratum membership, clusterID","code":""},{"path":"https://nustat.github.io/generalizeR/reference/stratify.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stratify a Population Data Frame — stratify","text":"Tipton, E. (2014). Stratified sampling using cluster analysis: sample selection strategy improved generalizations experiments. Evaluation Review, 37(2), 109-139. Tipton, E. (2014). generalizable experiment? index comparing experimental samples populations. Journal Educational Behavioral Statistics, 39(6), 478-501.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/stratify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratify a Population Data Frame — stratify","text":"","code":"# \\donttest{ if (FALSE) { # To get sample data; must first be installed using install_github(\"katiecoburn/generalizeRdata\") library(generalizeRdata)  # Guided: stratify(ipeds)  # Not guided: stratify(ipeds, guided = FALSE, n_strata = 4,    variables = c(\"pct_female\", \"pct_white\"), idnum = \"unitid\") } # }"},{"path":"https://nustat.github.io/generalizeR/reference/trim_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Population so Population Covariates are within bounds of Trial Covariates — trim_pop","title":"Subset Population so Population Covariates are within bounds of Trial Covariates — trim_pop","text":"Subset Population Population Covariates within bounds Trial Covariates","code":""},{"path":"https://nustat.github.io/generalizeR/reference/trim_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Population so Population Covariates are within bounds of Trial Covariates — trim_pop","text":"","code":"trim_pop(trial, selection_covariates, data)"},{"path":"https://nustat.github.io/generalizeR/reference/trim_pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Population so Population Covariates are within bounds of Trial Covariates — trim_pop","text":"trial variable name denoting binary trial participation (1 = trial participant, 0 = trial participant) selection_covariates vector covariate names data set predict trial participation data data frame comprised \"stacked\" trial target population data","code":""},{"path":"https://nustat.github.io/generalizeR/reference/trim_pop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Population so Population Covariates are within bounds of Trial Covariates — trim_pop","text":"trim_pop returns data frame, target population covariates exceed bounds trial covariates","code":""},{"path":"https://nustat.github.io/generalizeR/reference/weighting.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Weights for Generalizing Average Treatment Effect — weighting","title":"Estimate Weights for Generalizing Average Treatment Effect — weighting","text":"function designed use within 'covariate_table()' 'assess()'.","code":""},{"path":"https://nustat.github.io/generalizeR/reference/weighting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Weights for Generalizing Average Treatment Effect — weighting","text":"","code":"weighting(   outcome,   treatment,   trial,   selection_covariates,   data,   selection_method = \"lr\",   is_data_disjoint = TRUE,   seed )"},{"path":"https://nustat.github.io/generalizeR/reference/weighting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Weights for Generalizing Average Treatment Effect — weighting","text":"outcome variable name denoting outcome treatment variable name denoting binary treatment assignment (ok available trial, population) trial variable name denoting binary trial participation (1 = trial participant, 0 = trial participant) selection_covariates vector covariate names data set predict trial participation data data frame comprised \"stacked\" trial target population data selection_method method estimate probability trial participation.  Default logistic regression (\"lr\").  methods supported Random Forests (\"rf\") Lasso (\"lasso\") is_data_disjoint logical. TRUE, trial population data considered independent.  affects calculation weights - see details information. seed numeric. default, seed set 13783, otherwise can specified (simulation purposes).","code":""}]
